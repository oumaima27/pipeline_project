name: CI Pipeline

on: [push]

env:
  DB_NAME: oumaima
  DB_HOST: 127.0.0.1
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  SPRING_PROFILES_ACTIVE: ci
  SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/oumaima?useSSL=false&allowPublicKeyRetrieval=true
  SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USER }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }}"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Navigate to project folder
        run: |
          cd springboot-swagger-crud
          echo "PROJECT_DIR=$(pwd)" >> $GITHUB_ENV
          echo "JAR_FILE=target/$(ls $PROJECT_DIR/target | grep -E '^springboot-swagger-crud.*\.jar$')" >> $GITHUB_ENV

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for MySQL and configure
        timeout-minutes: 2
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uroot -prootpassword123 --silent; then
              mysql -h127.0.0.1 -uroot -prootpassword123 -e "
                CREATE DATABASE IF NOT EXISTS ${DB_NAME};
                CREATE USER IF NOT EXISTS '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASSWORD}';
                GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'%';
                FLUSH PRIVILEGES;"
              echo "MySQL configured successfully"
              exit 0
            fi
            sleep 2
          done
          echo "MySQL configuration failed"
          exit 1

      - name: Build with tests
        working-directory: ${{ env.PROJECT_DIR }}
        run: ./mvnw clean verify -Dspring.profiles.active=ci

      - name: Build Docker image (for CD pipeline)
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          docker build -t oumaimamaghraoui27/springboot-app:ci .