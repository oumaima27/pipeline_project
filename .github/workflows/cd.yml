name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword123
          MYSQL_DATABASE: oumaima
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -prootpassword123"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build production JAR
        working-directory: springboot-swagger-crud
        run: ./mvnw clean package -DskipTests

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: springboot-swagger-crud
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/yourapp:1.0.${{ github.run_number }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/yourapp:1.0.${{ github.run_number }} ${{ secrets.DOCKER_USERNAME }}/yourapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/yourapp:1.0.${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/yourapp:latest

      - name: Run database migrations
        run: |
          docker run --network host --rm \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/oumaima \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USER }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            ${{ secrets.DOCKER_USERNAME }}/yourapp:1.0.${{ github.run_number }} \
            java -jar app.jar \
            --spring.main.web-application-type=none \
            --spring.liquibase.enabled=true || {
              echo "‚ùå Migration failed. Rolling back..."
              docker pull ${{ secrets.DOCKER_USERNAME }}/yourapp:latest-stable
              docker run -d --network host \
                -e SPRING_PROFILES_ACTIVE=prod \
                -e SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/oumaima \
                -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USER }} \
                -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
                ${{ secrets.DOCKER_USERNAME }}/yourapp:latest-stable
            }

      - name: Tag and push latest-stable
        if: ${{ success() }}
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/yourapp:1.0.${{ github.run_number }} ${{ secrets.DOCKER_USERNAME }}/yourapp:latest-stable
          docker push ${{ secrets.DOCKER_USERNAME }}/yourapp:latest-stable

      - name: Clean up Docker
        if: always()
        run: |
          echo "üßπ Cleaning up Docker..."
          docker system prune -af --volumes

