name: CI/CD Pipeline

on: [push]

env:
  DB_NAME: oumaima
  DB_USER: appuser
  DB_PASSWORD: apppassword

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword123
          MYSQL_DATABASE: oumaima
          MYSQL_USER: appuser
          MYSQL_PASSWORD: apppassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uappuser -papppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Navigate to project directory
        run: |
          cd springboot-swagger-crud
          echo "PROJECT_DIR=$(pwd)" >> $GITHUB_ENV
          ls -la

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make Maven Wrapper executable
        run: chmod +x mvnw
        working-directory: ${{ env.PROJECT_DIR }}

      - name: Initialize Database
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h127.0.0.1 -uroot -prootpassword123 --silent; then
              mysql -h127.0.0.1 -uroot -prootpassword123 -e "
                CREATE DATABASE IF NOT EXISTS oumaima;
                GRANT ALL PRIVILEGES ON oumaima.* TO 'appuser'@'%';
                FLUSH PRIVILEGES;
              "
              break
            fi
            sleep 3
          done

      - name: Run Liquibase Migrations
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ./mvnw liquibase:update \
            -Dliquibase.url=jdbc:mysql://127.0.0.1:3306/oumaima?useSSL=false \
            -Dliquibase.username=appuser \
            -Dliquibase.password=apppassword \
            -Dliquibase.changeLogFile=src/main/resources/db/changelog/db.changelog-master.xml

      - name: Build and Test
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ./mvnw clean install -Dspring-boot.run.profiles=pipeline
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/oumaima?useSSL=false
          SPRING_DATASOURCE_USERNAME: appuser
          SPRING_DATASOURCE_PASSWORD: apppassword

      - name: Verify Database
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          mysql -h127.0.0.1 -uappuser -papppassword -e "
            USE oumaima;
            SHOW TABLES;
            SELECT id, author, filename FROM DATABASECHANGELOG;
          "