name: CI/CD Pipeline

on: [push]

env:
  DB_NAME: oumaima
  DB_USER: appuser
  DB_PASSWORD: apppassword

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword123
          MYSQL_DATABASE: ${{ env.DB_NAME }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports: [3306:3306]
        options: >-
          --health-cmd="mysqladmin ping -uroot -prootpassword123"
          --health-interval=5s

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h127.0.0.1 -uroot -prootpassword123 --silent; then
              mysql -h127.0.0.1 -uroot -prootpassword123 -e "GRANT ALL ON ${DB_NAME}.* TO '${DB_USER}'@'%';"
              break
            fi
            sleep 3
          done

      - name: Build and test
        run: |
          chmod +x mvnw
          ./mvnw clean test -Dspring-boot.run.profiles=pipeline
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/${{ env.DB_NAME }}?useSSL=false
          SPRING_DATASOURCE_USERNAME: ${{ env.DB_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.DB_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: validate

      - name: Run Liquibase migrations
        if: success()
        run: |
          ./mvnw liquibase:update \
            -Dliquibase.url=jdbc:mysql://127.0.0.1:3306/${{ env.DB_NAME }} \
            -Dliquibase.username=${{ env.DB_USER }} \
            -Dliquibase.password=${{ env.DB_PASSWORD }} \
            -Dliquibase.changeLogFile=src/main/resources/db/changelog/db.changelog-master.xml

      - name: Verify database
        run: |
          mysql -h127.0.0.1 -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -e "
            USE ${{ env.DB_NAME }};
            SHOW TABLES;
            SELECT id, author, filename FROM DATABASECHANGELOG;
          "