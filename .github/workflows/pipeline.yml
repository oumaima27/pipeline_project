name: CI/CD Pipeline

on: [push]

env:
  DB_NAME: oumaima
  DB_HOST: 127.0.0.1
  DB_USER: appuser
  DB_PASSWORD: apppassword
  SPRING_PROFILES_ACTIVE: pipeline
  SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/oumaima?useSSL=false
  SPRING_DATASOURCE_USERNAME: appuser
  SPRING_DATASOURCE_PASSWORD: apppassword

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword123
          MYSQL_DATABASE: oumaima
          MYSQL_USER: appuser
          MYSQL_PASSWORD: apppassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uappuser -papppassword"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Navigate to project
        run: |
          cd springboot-swagger-crud
          echo "PROJECT_DIR=$(pwd)" >> $GITHUB_ENV
          ls -la

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for MySQL to be ready and configure permissions
        run: |
          for i in {1..20}; do
            if mysqladmin ping -h127.0.0.1 -uroot -prootpassword123 --silent; then
              mysql -h127.0.0.1 -uroot -prootpassword123 -e "
                CREATE DATABASE IF NOT EXISTS ${DB_NAME};
                CREATE USER IF NOT EXISTS '${DB_USER}'@'%' IDENTIFIED WITH mysql_native_password BY '${DB_PASSWORD}';
                GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'%';
                FLUSH PRIVILEGES;
              "
              break
            fi
            echo "Waiting for MySQL to be ready..."
            sleep 3
          done

      - name: Verify DB connection as appuser
        run: |
          mysql -h127.0.0.1 -u${DB_USER} -p${DB_PASSWORD} -e "SHOW DATABASES;"

      - name: Run Liquibase migrations
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ./mvnw liquibase:update \
            -Dliquibase.url=jdbc:mysql://127.0.0.1:3306/oumaima?useSSL=false \
            -Dliquibase.username=appuser \
            -Dliquibase.password=apppassword \
            -Dliquibase.driver=com.mysql.cj.jdbc.Driver \
            -Dliquibase.changeLogFile=db/changelog/db.changelog-master.xml

      - name: Build and test
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
        run: |
          ./mvnw clean install \
            -Dspring-boot.run.profiles=pipeline \
            -Dspring.datasource.url=${SPRING_DATASOURCE_URL} \
            -Dspring.datasource.username=${SPRING_DATASOURCE_USERNAME} \
            -Dspring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

      - name: Verify migrations
        run: |
          mysql -h127.0.0.1 -u${DB_USER} -p${DB_PASSWORD} -e "
            USE ${DB_NAME};
            SHOW TABLES;
            SELECT id, author, filename, dateexecuted FROM DATABASECHANGELOG;
          "